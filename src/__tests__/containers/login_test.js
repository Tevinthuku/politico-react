// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Login$PoliticoReact = require("../../containers/Login.js");
var ReactTestingLibrary = require("bs-react-testing-library/src/ReactTestingLibrary.bs.js");
var DomutilsJs = require("../../utils/domutils.js");

function getElementValue(prim) {
  return DomutilsJs.getElementValue(prim);
}

function loginPromiseMock(_email, _password) {
  console.log("Login function");
  return Promise.resolve("email");
}

function spyonconsole(param) {
  return (jest.spyOn(console, 'log').mockImplementation(() => {}));
}

function restoreconsole(param) {
  return (console.log.mockRestore());
}

var eta = React.createElement(Login$PoliticoReact.make, {
      onSubmit: loginPromiseMock
    });

var logincomponent = ReactTestingLibrary.render(undefined, undefined, eta);

Jest.describe("Form elements work as expected", (function (param) {
        beforeEach((function () {
                return spyonconsole(/* () */0);
              }));
        afterEach((function () {
                return restoreconsole(/* () */0);
              }));
        Jest.test("test email input can handlechange", (function (param) {
                Curry._2(ReactTestingLibrary.FireEvent[/* change */7], {
                      target: {
                        value: "tev"
                      }
                    }, ReactTestingLibrary.getByPlaceholderText("email", logincomponent));
                return Jest.Expect[/* toBe */2]("tev", Jest.Expect[/* expect */0](DomutilsJs.getElementValue(ReactTestingLibrary.getByPlaceholderText("email", logincomponent))));
              }));
        Jest.test("test password input to change", (function (param) {
                Curry._2(ReactTestingLibrary.FireEvent[/* change */7], {
                      target: {
                        value: "pass"
                      }
                    }, ReactTestingLibrary.getByPlaceholderText("password", logincomponent));
                return Jest.Expect[/* toBe */2]("pass", Jest.Expect[/* expect */0](DomutilsJs.getElementValue(ReactTestingLibrary.getByPlaceholderText("password", logincomponent))));
              }));
        return Jest.test("form can handle submit", (function (param) {
                      Curry._2(ReactTestingLibrary.FireEvent[/* submit */60], {
                            preventDefault: (function (param) {
                                return /* () */0;
                              })
                          }, ReactTestingLibrary.getByTestId("login-form", logincomponent));
                      ((expect(console.log).toBeCalled()));
                      return Jest.pass;
                    }));
      }));

exports.getElementValue = getElementValue;
exports.loginPromiseMock = loginPromiseMock;
exports.spyonconsole = spyonconsole;
exports.restoreconsole = restoreconsole;
exports.logincomponent = logincomponent;
/* eta Not a pure module */
